/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package v;

import c.AutoComplete;
import c.Errormzg;
import c.selfproductcontroller;
import java.awt.Color;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import pojo.GrnLog;
import pojo.Product;
import pojo.Units;

/**
 *
 * @author User
 */
public class SelfProducts extends javax.swing.JPanel {

    /**
     * Creates new form SelfProducts
     *
     */
    public static SelfProducts selfProducts = null;

    public SelfProducts() {
        initComponents();
        loadProductToCombo();

    }

    public static SelfProducts getInstance() {
        if (selfProducts == null) {
            selfProducts = new SelfProducts();
        }

        return selfProducts;
    }
     public void loadProductToCombo() {
        cmbtargetproduct.removeAllItems();
        ArrayList<Product> all = new m.Product().getAll();
        for (Product product : all) {
            cmbtargetproduct.addItem(product.getName());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        mixdate = new com.toedter.calendar.JDateChooser();
        cmbtargetproduct = new javax.swing.JComboBox<>();
        txtpr1name = new javax.swing.JTextField();
        txtpr1quantity = new javax.swing.JTextField();
        txtpr2name = new javax.swing.JTextField();
        txtpr2quantity = new javax.swing.JTextField();
        txtmixquantity = new javax.swing.JTextField();
        txtaverageprice = new javax.swing.JTextField();
        btnadd = new javax.swing.JButton();
        btnreset = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        lblpr2qty = new javax.swing.JLabel();
        lblpr1qty = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        bottledate = new com.toedter.calendar.JDateChooser();
        txtbottlepr1name = new javax.swing.JTextField();
        txtbottleprname = new javax.swing.JTextField();
        lblunitbt = new javax.swing.JLabel();
        txtbottlecost = new javax.swing.JTextField();
        txtcostperlabel = new javax.swing.JTextField();
        txtothercost = new javax.swing.JTextField();
        txtbottlemakingprice = new javax.swing.JTextField();
        txtquantity = new javax.swing.JTextField();
        txttotprice = new javax.swing.JTextField();
        jPanel9 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        lblbtavailbleqty = new javax.swing.JLabel();
        jPanel10 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        lblbtlqty = new javax.swing.JLabel();
        btnbtadd = new javax.swing.JButton();
        btnreset1 = new javax.swing.JButton();

        setBackground(c.View.getInstance().colorTheme);

        jTabbedPane1.setBackground(new java.awt.Color(255, 255, 255));
        jTabbedPane1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 500, 210, 26));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setLayout(new java.awt.GridLayout(8, 0, 0, 30));

        jLabel8.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel8.setText("Date");
        jPanel3.add(jLabel8);

        jLabel23.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel23.setText("Target product");
        jPanel3.add(jLabel23);

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel6.setText("Product 1 Name");
        jPanel3.add(jLabel6);

        jLabel10.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel10.setText("Product 1 Quantity(kg)");
        jPanel3.add(jLabel10);

        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel7.setText("Product 2 Name");
        jPanel3.add(jLabel7);

        jLabel9.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel9.setText("Product 2 Quantity(kg)");
        jPanel3.add(jLabel9);

        jLabel12.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel12.setText("Product mix Quantity(kg)");
        jPanel3.add(jLabel12);

        jLabel13.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel13.setText("Average Price");
        jPanel3.add(jLabel13);

        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 11, 184, 450));

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setLayout(new java.awt.GridLayout(8, 0, 0, 30));

        mixdate.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 255, 0)));
        mixdate.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jPanel4.add(mixdate);

        jPanel4.add(cmbtargetproduct);

        txtpr1name.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtpr1name.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 255, 0)));
        txtpr1name.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtpr1nameFocusLost(evt);
            }
        });
        txtpr1name.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtpr1nameMouseClicked(evt);
            }
        });
        txtpr1name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtpr1nameActionPerformed(evt);
            }
        });
        txtpr1name.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtpr1nameKeyTyped(evt);
            }
        });
        jPanel4.add(txtpr1name);

        txtpr1quantity.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtpr1quantity.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 255, 0)));
        txtpr1quantity.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtpr1quantityFocusLost(evt);
            }
        });
        txtpr1quantity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtpr1quantityActionPerformed(evt);
            }
        });
        txtpr1quantity.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtpr1quantityKeyTyped(evt);
            }
        });
        jPanel4.add(txtpr1quantity);

        txtpr2name.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtpr2name.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 255, 0)));
        txtpr2name.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtpr2nameFocusLost(evt);
            }
        });
        txtpr2name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtpr2nameActionPerformed(evt);
            }
        });
        txtpr2name.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtpr2nameKeyTyped(evt);
            }
        });
        jPanel4.add(txtpr2name);

        txtpr2quantity.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtpr2quantity.setToolTipText("Press Enter");
        txtpr2quantity.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 255, 0)));
        txtpr2quantity.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtpr2quantityFocusLost(evt);
            }
        });
        txtpr2quantity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtpr2quantityActionPerformed(evt);
            }
        });
        txtpr2quantity.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtpr2quantityKeyTyped(evt);
            }
        });
        jPanel4.add(txtpr2quantity);

        txtmixquantity.setEditable(false);
        txtmixquantity.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtmixquantity.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 255, 0)));
        txtmixquantity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtmixquantityActionPerformed(evt);
            }
        });
        txtmixquantity.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtmixquantityKeyTyped(evt);
            }
        });
        jPanel4.add(txtmixquantity);

        txtaverageprice.setEditable(false);
        txtaverageprice.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtaverageprice.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 255, 0)));
        txtaverageprice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtaveragepriceActionPerformed(evt);
            }
        });
        txtaverageprice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtaveragepriceKeyTyped(evt);
            }
        });
        jPanel4.add(txtaverageprice);

        jPanel1.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(204, 11, 318, 450));

        btnadd.setBackground(new java.awt.Color(255, 255, 255));
        btnadd.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnadd.setText("ADD");
        btnadd.setBorder(null);
        btnadd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btnaddMouseReleased(evt);
            }
        });
        btnadd.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                btnaddKeyTyped(evt);
            }
        });
        jPanel1.add(btnadd, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 470, 121, 50));

        btnreset.setBackground(new java.awt.Color(255, 255, 255));
        btnreset.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnreset.setText("Reset");
        btnreset.setBorder(null);
        btnreset.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btnresetMouseReleased(evt);
            }
        });
        jPanel1.add(btnreset, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 470, 121, 50));

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setLayout(new java.awt.GridLayout(1, 2));
        jPanel1.add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(532, 75, 238, 30));

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));
        jPanel6.setLayout(new java.awt.GridLayout(1, 2));
        jPanel1.add(jPanel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(532, 193, -1, 31));

        jLabel2.setForeground(new java.awt.Color(255, 0, 51));
        jLabel2.setText("Availabale quantity (KG) ");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 310, -1, 31));

        lblpr2qty.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        lblpr2qty.setForeground(new java.awt.Color(51, 51, 51));
        jPanel1.add(lblpr2qty, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 310, 119, 31));

        lblpr1qty.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jPanel1.add(lblpr1qty, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 190, 119, 30));

        jLabel1.setForeground(new java.awt.Color(255, 0, 51));
        jLabel1.setText("Availabale quantity(KG) ");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 190, 119, 30));

        jTabbedPane1.addTab("Add Product Mix", jPanel1);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));
        jPanel7.setLayout(new java.awt.GridLayout(10, 0, 0, 11));

        jLabel11.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel11.setText("Date");
        jPanel7.add(jLabel11);

        jLabel14.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel14.setText("Product 1 Name");
        jPanel7.add(jLabel14);

        jLabel15.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel15.setText("Bottle Product Name");
        jPanel7.add(jLabel15);

        jLabel22.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel22.setText("Unit");
        jPanel7.add(jLabel22);

        jLabel19.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel19.setText("Cost Per Bottle");
        jPanel7.add(jLabel19);

        jLabel20.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel20.setText("Cost Per Label");
        jPanel7.add(jLabel20);

        jLabel16.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel16.setText("Other Costs");
        jPanel7.add(jLabel16);

        jLabel17.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel17.setText("Product making price(per bottle)");
        jPanel7.add(jLabel17);

        jLabel18.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel18.setText("Quantity(bottles)");
        jPanel7.add(jLabel18);

        jLabel21.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel21.setText("Total Price");
        jPanel7.add(jLabel21);

        jPanel2.add(jPanel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 16, 240, 410));

        jPanel8.setBackground(new java.awt.Color(255, 255, 255));
        jPanel8.setLayout(new java.awt.GridLayout(10, 0, 0, 10));

        bottledate.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 255, 0)));
        bottledate.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jPanel8.add(bottledate);

        txtbottlepr1name.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtbottlepr1name.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 255, 0)));
        txtbottlepr1name.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtbottlepr1nameFocusLost(evt);
            }
        });
        txtbottlepr1name.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtbottlepr1nameMouseClicked(evt);
            }
        });
        txtbottlepr1name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtbottlepr1nameActionPerformed(evt);
            }
        });
        txtbottlepr1name.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtbottlepr1nameKeyTyped(evt);
            }
        });
        jPanel8.add(txtbottlepr1name);

        txtbottleprname.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtbottleprname.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 255, 0)));
        txtbottleprname.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtbottleprnameFocusLost(evt);
            }
        });
        txtbottleprname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtbottleprnameActionPerformed(evt);
            }
        });
        txtbottleprname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtbottleprnameKeyTyped(evt);
            }
        });
        jPanel8.add(txtbottleprname);

        lblunitbt.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lblunitbt.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 255, 0)));
        jPanel8.add(lblunitbt);

        txtbottlecost.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtbottlecost.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 255, 0)));
        txtbottlecost.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtbottlecostActionPerformed(evt);
            }
        });
        txtbottlecost.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtbottlecostKeyTyped(evt);
            }
        });
        jPanel8.add(txtbottlecost);

        txtcostperlabel.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtcostperlabel.setToolTipText("Press Enter");
        txtcostperlabel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 255, 0)));
        txtcostperlabel.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtcostperlabelFocusLost(evt);
            }
        });
        txtcostperlabel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtcostperlabelActionPerformed(evt);
            }
        });
        txtcostperlabel.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtcostperlabelKeyTyped(evt);
            }
        });
        jPanel8.add(txtcostperlabel);

        txtothercost.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtothercost.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 255, 0)));
        txtothercost.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtothercostActionPerformed(evt);
            }
        });
        txtothercost.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtothercostKeyTyped(evt);
            }
        });
        jPanel8.add(txtothercost);

        txtbottlemakingprice.setEditable(false);
        txtbottlemakingprice.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtbottlemakingprice.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 255, 0)));
        txtbottlemakingprice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtbottlemakingpriceActionPerformed(evt);
            }
        });
        txtbottlemakingprice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtbottlemakingpriceKeyTyped(evt);
            }
        });
        jPanel8.add(txtbottlemakingprice);

        txtquantity.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtquantity.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 255, 0)));
        txtquantity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtquantityActionPerformed(evt);
            }
        });
        txtquantity.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtquantityKeyTyped(evt);
            }
        });
        jPanel8.add(txtquantity);

        txttotprice.setEditable(false);
        txttotprice.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txttotprice.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 255, 0)));
        txttotprice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txttotpriceActionPerformed(evt);
            }
        });
        txttotprice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txttotpriceKeyTyped(evt);
            }
        });
        jPanel8.add(txttotprice);

        jPanel2.add(jPanel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(265, 16, 280, 410));

        jPanel9.setBackground(new java.awt.Color(255, 255, 255));
        jPanel9.setLayout(new java.awt.GridLayout(1, 2));

        jLabel4.setForeground(new java.awt.Color(255, 0, 51));
        jLabel4.setText("Availabale quantity(kg) ");
        jPanel9.add(jLabel4);

        lblbtavailbleqty.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jPanel9.add(lblbtavailbleqty);

        jPanel2.add(jPanel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(571, 64, 240, 32));

        jPanel10.setBackground(new java.awt.Color(255, 255, 255));
        jPanel10.setLayout(new java.awt.GridLayout(1, 2));

        jLabel5.setForeground(new java.awt.Color(255, 0, 51));
        jLabel5.setText("Bottle oil quantity(kg) ");
        jPanel10.add(jLabel5);

        lblbtlqty.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jPanel10.add(lblbtlqty);

        jPanel2.add(jPanel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(564, 319, 240, 40));

        btnbtadd.setBackground(new java.awt.Color(255, 255, 255));
        btnbtadd.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnbtadd.setText("ADD");
        btnbtadd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btnbtaddMouseReleased(evt);
            }
        });
        btnbtadd.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnbtaddKeyPressed(evt);
            }
        });
        jPanel2.add(btnbtadd, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 440, 109, 42));

        btnreset1.setBackground(new java.awt.Color(255, 255, 255));
        btnreset1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnreset1.setText("Reset");
        btnreset1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btnreset1MouseReleased(evt);
            }
        });
        jPanel2.add(btnreset1, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 440, 121, 42));

        jTabbedPane1.addTab("Add Product Bottle", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 796, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtpr2quantityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtpr2quantityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtpr2quantityActionPerformed
    double averageprice = 0;
    double pr1stock = 0;
    double pr2stock = 0;
    double mixstock = 0;
    double labelcost = 0;
    double bottlecost = 0;
    double othercost = 0;

    public int price() {
        try {

            pr1stock = Double.parseDouble(txtpr1quantity.getText());
            pr2stock = Double.parseDouble(txtpr2quantity.getText());
            txtmixquantity.setText(String.valueOf(pr1stock + pr2stock));

            double pr1 = pr1stock * findPridByName1.getCurrentPrice();
            double pr2 = pr2stock * findPridByName2.getCurrentPrice();
            double tot = pr1 + pr2;

            mixstock = pr1stock + pr2stock;
            mixstock = Math.round(mixstock * 100.0) / 100.0;
            averageprice = tot / mixstock;
            averageprice = Math.round(averageprice * 100.0) / 100.0;

            txtaverageprice.setText(String.valueOf(averageprice));
            lblpr1qty.setText(findPridByName1.getCurrentStock().toString());
            lblpr2qty.setText(findPridByName2.getCurrentStock().toString());
            btnadd.requestFocus();
            return 1;
        } catch (Exception e) {
            e.printStackTrace();
            Errormzg.displayerrorMessage(e.toString());
            return 0;
        }
    }
    private void txtpr2quantityKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtpr2quantityKeyTyped
        // TODO add your handling code here:
        char vChar = evt.getKeyChar();
        if (!(Character.isDigit(vChar)
                || (vChar == KeyEvent.VK_BACK_SPACE)
                || (vChar == KeyEvent.VK_DELETE) || vChar == KeyEvent.VK_PERIOD)) {
            evt.consume();
        }
        if (evt.getKeyChar() == KeyEvent.VK_ENTER) {
            if (!mixdate.equals(null)) {
                if (!txtpr1name.getText().trim().isEmpty()) {
                    if (!txtpr1quantity.getText().trim().isEmpty()) {
                        if (!txtpr2name.getText().trim().isEmpty()) {
                            if (!txtpr2quantity.getText().trim().isEmpty()) {
                                price();
                            } else {
                                Errormzg.displayerrorMessage("Empty Fields");
                            }
                        } else {
                            Errormzg.displayerrorMessage("Empty Fields");
                        }
                    } else {
                        Errormzg.displayerrorMessage("Empty Fields");
                    }
                } else {
                    Errormzg.displayerrorMessage("Empty Fields");
                }
            }
        }
    }//GEN-LAST:event_txtpr2quantityKeyTyped

    private void txtpr1quantityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtpr1quantityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtpr1quantityActionPerformed

    private void txtpr1quantityKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtpr1quantityKeyTyped
        // TODO add your handling code here: char vChar = evt.getKeyChar();
        char vChar = evt.getKeyChar();
        if (!(Character.isDigit(vChar)
                || (vChar == KeyEvent.VK_BACK_SPACE)
                || (vChar == KeyEvent.VK_DELETE) || vChar == KeyEvent.VK_PERIOD)) {
            evt.consume();
        }

    }//GEN-LAST:event_txtpr1quantityKeyTyped

    private void txtpr1nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtpr1nameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtpr1nameActionPerformed
    Product findPridByName1 = null;
    private void txtpr1nameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtpr1nameKeyTyped
        // TODO add your handling code here:
        new AutoComplete().acProductName(txtpr1name);
        if (evt.getKeyChar() == KeyEvent.VK_ENTER) {
            findPridByName1 = new selfproductcontroller().findPridByName(txtpr1name.getText());
            if (findPridByName1 != null) {
                txtpr1name.setForeground(Color.BLUE);
                lblpr1qty.setText(findPridByName1.getCurrentStock().toString());

            } else {
                txtpr1name.setForeground(Color.red);
            }

        }
    }//GEN-LAST:event_txtpr1nameKeyTyped

    private void txtpr2nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtpr2nameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtpr2nameActionPerformed
    Product findPridByName2 = null;
    private void txtpr2nameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtpr2nameKeyTyped
        // TODO add your handling code here:
        new AutoComplete().acProductName(txtpr2name);
        if (evt.getKeyChar() == KeyEvent.VK_ENTER) {
            findPridByName2 = new selfproductcontroller().findPridByName(txtpr2name.getText());
            if (findPridByName2 != null) {
                txtpr2name.setForeground(Color.BLUE);
                lblpr2qty.setText(findPridByName2.getCurrentStock().toString());

            } else {
                txtpr2name.setForeground(Color.red);
            }

        }
    }//GEN-LAST:event_txtpr2nameKeyTyped

    private void txtmixquantityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtmixquantityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtmixquantityActionPerformed

    private void txtmixquantityKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtmixquantityKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtmixquantityKeyTyped

    private void txtaveragepriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtaveragepriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtaveragepriceActionPerformed

    private void txtaveragepriceKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtaveragepriceKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtaveragepriceKeyTyped

    private void txtpr1nameMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtpr1nameMouseClicked
        // TODO add your handling code here:

    }//GEN-LAST:event_txtpr1nameMouseClicked

    private void txtpr1nameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtpr1nameFocusLost
        // TODO add your handling code here:

//

    }//GEN-LAST:event_txtpr1nameFocusLost

    private void txtpr2nameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtpr2nameFocusLost
        // TODO add your handling code here

//        System.out.println(findPridByName2.getName());
    }//GEN-LAST:event_txtpr2nameFocusLost

    private void txtpr1quantityFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtpr1quantityFocusLost
        // TODO add your handling code here:
//        if (Double.parseDouble(txtpr1quantity.getText()) <= findPridByName1.getCurrentStock()) {
//
//        } else {
//            Errormzg.displayerrorMessage("Not enough Product 1 quantity please add equal or less value");
//            txtpr1quantity.setText("");
//        }
    }//GEN-LAST:event_txtpr1quantityFocusLost

    private void txtpr2quantityFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtpr2quantityFocusLost
        // TODO add your handling code here:
//        if (Double.parseDouble(txtpr2quantity.getText()) <= findPridByName2.getCurrentStock()) {
//
//        } else {
//            Errormzg.displayerrorMessage("Not enough Product 2 quantity please add equal or less value");
//            txtpr2quantity.setText("");
//        }
    }//GEN-LAST:event_txtpr2quantityFocusLost

    public int addMix() {
        try {
            if (pr1stock <= findPridByName1.getCurrentStock()) {
                if (pr2stock <= findPridByName2.getCurrentStock()) {
                    int mixquantity = new c.selfproductcontroller().getStockToMix(findPridByName1, findPridByName2, pr1stock, pr2stock);
                    if (mixquantity != 0) {
                        GrnLog grnlogpojo = new c.selfproductcontroller().savegrnlog(mixdate.getDate(), mixstock, averageprice,cmbtargetproduct.getSelectedItem().toString());
                        if (grnlogpojo != null) {
                            new c.selfproductcontroller().savemix(findPridByName1, findPridByName2, pr1stock, pr2stock, mixdate.getDate(), mixstock, averageprice, grnlogpojo);
                            pojo.Product pr = new m.Product().getByName(cmbtargetproduct.getSelectedItem().toString());

                            int i = new c.StockControler().getaverageprice(pr);
                            if (i != 0) {
                                Errormzg.displayconfirmMessage("Stock added succssfully");
                                return i;
                            } else {
                                Errormzg.displayerrorMessage("Unable to Add");
                                return 0;
                            }

                        } else {
                            Errormzg.displayerrorMessage("unable to add grn");
                            return 0;
                        }
                    } else {
                        Errormzg.displayerrorMessage("Unable to add grn");
                        return 0;
                    }
                } else {
                    Errormzg.displayerrorMessage("Available quantity is not enough");
                    return 0;
                }
            } else {
                Errormzg.displayerrorMessage("Available quantity is not enough");
                return 0;
            }

        } catch (Exception e) {
            e.printStackTrace();
            return 0;
        }
    }

    private void btnaddMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnaddMouseReleased
        // TODO add your handling code here:
        if (!mixdate.equals(null)) {
            if (!txtpr1name.getText().trim().isEmpty()) {
                if (!txtpr1quantity.getText().trim().isEmpty()) {
                    if (!txtpr2name.getText().trim().isEmpty()) {
                        if (!txtpr2quantity.getText().trim().isEmpty()) {
                            if (!txtmixquantity.getText().trim().isEmpty()) {
                                if (!txtaverageprice.getText().trim().isEmpty()) {
                                    if (findPridByName1 != null) {
                                        if (findPridByName2 != null) {
                                            int i = addMix();
                                            if (i != 0) {
                                                clear();
                                            }
                                        } else {
                                            Errormzg.displayerrorMessage("Please Set product 2 and press Enter");
                                        }
                                    } else {
                                        Errormzg.displayerrorMessage("Please Set product 1 and press Enter");
                                    }

                                } else {
                                    Errormzg.displayerrorMessage("Empty Fields");
                                }
                            } else {
                                Errormzg.displayerrorMessage("Empty Fields");
                            }
                        } else {
                            Errormzg.displayerrorMessage("Empty Fields");
                        }
                    } else {
                        Errormzg.displayerrorMessage("Empty Fields");
                    }
                } else {
                    Errormzg.displayerrorMessage("Empty Fields");
                }
            } else {
                Errormzg.displayerrorMessage("Empty Fields");
            }
        }


    }//GEN-LAST:event_btnaddMouseReleased
    Product findbottlepr1ByName2 = null;
    Product findbottlepr1ByName1 = null;
    private void btnbtaddMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnbtaddMouseReleased
        // TODO add your handling code here:
        if (!bottledate.equals(null)) {
            if (!txtbottlepr1name.getText().isEmpty()) {
                if (!txtbottleprname.getText().isEmpty()) {
                    if (!txtbottlecost.getText().isEmpty()) {
                        if (!txtcostperlabel.getText().isEmpty()) {
                            if (!txtothercost.getText().isEmpty()) {
                                if (!txtbottlemakingprice.getText().isEmpty()) {
                                    if (!txtquantity.getText().isEmpty()) {
                                        if (!txttotprice.getText().isEmpty()) {
                                            if (findbottlepr1ByName1 != null) {
                                                if (findbottlepr1ByName2 != null) {
                                                    int ok = bottleadd();
                                                    if (ok != 0) {
                                                        saveExtraCosts();
                                                        int ook = new c.StockControler().getaverageprice(findbottlepr1ByName1);
                                                        if (ook != 0) {
                                                            Errormzg.displayconfirmMessage("stock added");
                                                            clearbtl();
                                                        } else {
                                                            Errormzg.displayerrorMessage("unable to add");
                                                        }

                                                    } else {
                                                        Errormzg.displayerrorMessage("unable to add moneybook");
                                                    }
                                                } else {
                                                    Errormzg.displayerrorMessage("Please Set product and press Enter");
                                                }
                                            } else {
                                                Errormzg.displayerrorMessage("Please Set bottle product and press Enter");
                                            }

                                        } else {
                                            Errormzg.displayerrorMessage("Enter Fields");
                                        }
                                    } else {
                                        Errormzg.displayerrorMessage("Enter Fields");
                                    }
                                } else {
                                    Errormzg.displayerrorMessage("Enter Fields");
                                }
                            } else {
                                Errormzg.displayerrorMessage("Enter Fields");
                            }
                        } else {
                            Errormzg.displayerrorMessage("Enter Fields");
                        }
                    } else {
                        Errormzg.displayerrorMessage("Enter Fields");
                    }
                } else {
                    Errormzg.displayerrorMessage("Enter Fields");
                }

            } else {
                Errormzg.displayerrorMessage("Enter Fields");
            }
        } else {
            Errormzg.displayerrorMessage("Enter Fields");
        }

    }//GEN-LAST:event_btnbtaddMouseReleased

    private void txttotpriceKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txttotpriceKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txttotpriceKeyTyped

    private void txttotpriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txttotpriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txttotpriceActionPerformed
    double bottleqty = 0;
    double total = 0;
    double btlqtykg = 0;
    private void txtquantityKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtquantityKeyTyped
        // TODO add your handling code here:
        char vChar = evt.getKeyChar();
        if (!(Character.isDigit(vChar)
                || (vChar == KeyEvent.VK_BACK_SPACE)
                || (vChar == KeyEvent.VK_DELETE) || vChar == KeyEvent.VK_PERIOD)) {
            evt.consume();
        }
        if (evt.getKeyChar() == KeyEvent.VK_ENTER) {
            bottleqty = Double.parseDouble(txtquantity.getText());
            total = bottleqty * bottlesellingprice;
            total = Math.round(total * 100.0) / 100.0;
            txttotprice.setText(String.valueOf(total));
            if (un.getId() == 3) {
                btlqtykg = bottleqty * 0.69;
            } else if (un.getId() == 4) {
                btlqtykg = bottleqty * 0.34;

            } else if (un.getId() == 5) {
                btlqtykg = bottleqty * 0.33;

            } else {
                Errormzg.displayerrorMessage("Please select Bottle Product");
            }
            btlqtykg = Math.round(btlqtykg * 100.0) / 100.0;
            lblbtlqty.setText(String.valueOf(btlqtykg));

            btnbtadd.requestFocus();

        }
    }//GEN-LAST:event_txtquantityKeyTyped

    private void txtquantityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtquantityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtquantityActionPerformed

    private void txtbottlemakingpriceKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtbottlemakingpriceKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtbottlemakingpriceKeyTyped

    private void txtbottlemakingpriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtbottlemakingpriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtbottlemakingpriceActionPerformed
    double bottleprice = 0;
    double bottlesellingprice = 0;
    double morecost = 0;

    public int costcal() {
        if (un.getId() == 3) {
            bottleprice = findbottlepr1ByName1.getCurrentPrice() * 0.69;
        } else if (un.getId() == 4) {
            bottleprice = findbottlepr1ByName1.getCurrentPrice() * 0.34;

        } else if (un.getId() == 5) {
            bottleprice = findbottlepr1ByName1.getCurrentPrice() * 0.33;

        } else {
            Errormzg.displayerrorMessage("Please select Bottle Product");
        }
        try {
            bottlecost = Double.parseDouble(txtbottlecost.getText());
            labelcost = Double.parseDouble(txtcostperlabel.getText());
            othercost = Double.parseDouble(txtothercost.getText());

            morecost = bottlecost + labelcost + othercost;
            bottlesellingprice = bottlecost + labelcost + othercost + bottleprice;
            bottlesellingprice = Math.round(bottlesellingprice * 100.0) / 100.0;
            morecost = Math.round(morecost * 100.0) / 100.0;

            txtbottlemakingprice.setText(String.valueOf(bottlesellingprice));
            txtquantity.requestFocus();

        } catch (Exception e) {
            Errormzg.displayerrorMessage("please enter correct values");
        }
        return 0;
    }
    private void txtothercostKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtothercostKeyTyped
        // TODO add your handling code here:
        char vChar = evt.getKeyChar();
        if (!(Character.isDigit(vChar)
                || (vChar == KeyEvent.VK_BACK_SPACE)
                || (vChar == KeyEvent.VK_DELETE) || vChar == KeyEvent.VK_PERIOD)) {
            evt.consume();
        }
        if (evt.getKeyChar() == KeyEvent.VK_ENTER) {
            if (!bottledate.equals(null)) {
                if (!txtbottlepr1name.getText().isEmpty()) {
                    if (!txtbottleprname.getText().isEmpty()) {
                        if (!txtbottlecost.getText().isEmpty()) {
                            if (!txtcostperlabel.getText().isEmpty()) {
                                costcal();
                            } else {
                                Errormzg.displayerrorMessage("Enter Fields");
                            }
                        } else {
                            Errormzg.displayerrorMessage("Enter Fields");
                        }
                    } else {
                        Errormzg.displayerrorMessage("Enter Fields");
                    }

                } else {
                    Errormzg.displayerrorMessage("Enter Fields");
                }
            } else {
                Errormzg.displayerrorMessage("Enter Fields");
            }

        }
    }//GEN-LAST:event_txtothercostKeyTyped

    private void txtothercostActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtothercostActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtothercostActionPerformed

    private void txtcostperlabelKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtcostperlabelKeyTyped
        // TODO add your handling code here:
        char vChar = evt.getKeyChar();
        if (!(Character.isDigit(vChar)
                || (vChar == KeyEvent.VK_BACK_SPACE)
                || (vChar == KeyEvent.VK_DELETE) || vChar == KeyEvent.VK_PERIOD)) {
            evt.consume();
        }
    }//GEN-LAST:event_txtcostperlabelKeyTyped

    private void txtcostperlabelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtcostperlabelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtcostperlabelActionPerformed

    private void txtcostperlabelFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtcostperlabelFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txtcostperlabelFocusLost

    private void txtbottlecostKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtbottlecostKeyTyped
        // TODO add your handling code here:
        char vChar = evt.getKeyChar();
        if (!(Character.isDigit(vChar)
                || (vChar == KeyEvent.VK_BACK_SPACE)
                || (vChar == KeyEvent.VK_DELETE) || vChar == KeyEvent.VK_PERIOD)) {
            evt.consume();
        }
    }//GEN-LAST:event_txtbottlecostKeyTyped

    private void txtbottlecostActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtbottlecostActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtbottlecostActionPerformed
    Units un = null;
    private void txtbottleprnameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtbottleprnameKeyTyped
        // TODO add your handling code here:
        new AutoComplete().acProductName(txtbottleprname);
        if (evt.getKeyChar() == KeyEvent.VK_ENTER) {
            findbottlepr1ByName2 = new selfproductcontroller().findPridByName(txtbottleprname.getText());
            if (findbottlepr1ByName2 != null) {
                txtbottleprname.setForeground(Color.BLUE);

            } else {
                txtbottleprname.setForeground(Color.red);
            }
            try {
                un = new m.Units().getBy(findbottlepr1ByName2.getUnits().getId());
                lblunitbt.setText(un.getUnitName());
                txtbottlecost.requestFocus();

            } catch (Exception e) {
                e.printStackTrace();
                Errormzg.displayerrorMessage("Please Enter valid name");
            }

        }
    }//GEN-LAST:event_txtbottleprnameKeyTyped

    private void txtbottleprnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtbottleprnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtbottleprnameActionPerformed

    private void txtbottleprnameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtbottleprnameFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txtbottleprnameFocusLost

    private void txtbottlepr1nameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtbottlepr1nameKeyTyped
        // TODO add your handling code here:
        new AutoComplete().acProductName(txtbottlepr1name);
        if (evt.getKeyChar() == KeyEvent.VK_ENTER) {
            findbottlepr1ByName1 = new selfproductcontroller().findPridByName(txtbottlepr1name.getText());
            if (findbottlepr1ByName1 != null) {
                txtbottlepr1name.setForeground(Color.BLUE);
                lblbtavailbleqty.setText(findbottlepr1ByName1.getCurrentStock().toString());
            } else {
                txtbottlepr1name.setForeground(Color.red);
            }
        }
    }//GEN-LAST:event_txtbottlepr1nameKeyTyped

    private void txtbottlepr1nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtbottlepr1nameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtbottlepr1nameActionPerformed

    private void txtbottlepr1nameMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtbottlepr1nameMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_txtbottlepr1nameMouseClicked

    private void txtbottlepr1nameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtbottlepr1nameFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txtbottlepr1nameFocusLost

    public int bottleadd() {
        try {
            if (btlqtykg <= findbottlepr1ByName1.getCurrentStock()) {
//                System.out.println("qty ekta awa");
                int done = new c.selfproductcontroller().getStockToBottle(findbottlepr1ByName1, btlqtykg);
                if (done != 0) {
                    GrnLog btlgrnlgid = new c.selfproductcontroller().saveBtlGrnLog(bottledate.getDate(), bottleqty, bottlesellingprice, findbottlepr1ByName2);
                    if (btlgrnlgid != null) {
                        int ok = new c.selfproductcontroller().saveBottle(findbottlepr1ByName2, findbottlepr1ByName1, bottleqty, btlqtykg, bottledate.getDate(), bottlecost, labelcost, othercost, bottlesellingprice, btlgrnlgid);
                        if (ok != 0) {
                            return 1;
                        } else {
                            Errormzg.displayerrorMessage("Unable to add");
                            return 0;
                        }
                    } else {
                        Errormzg.displayerrorMessage("unable to save grn");
                        return 0;
                    }
                } else {
//                    Errormzg.displayerrorMessage("Not enough Available quantity");
                    return 0;
                }
            } else {
                Errormzg.displayerrorMessage("Not enough Available quantity");
//                System.out.println("fuck");
                return 0;
            }
        } catch (Exception e) {
            e.printStackTrace();
            return 0;
        }
    }

    public int saveExtraCosts() {
        try {
            double extracost = morecost * bottleqty;
            extracost = Math.round(extracost * 100.0) / 100.0;
            int done = new c.selfproductcontroller().btlExtraCosts(extracost, bottledate.getDate());
            return done;
        } catch (Exception e) {
            e.printStackTrace();
            return 0;
        }
    }

    public void clearbtl() {
        bottledate.setDate(null);
        txtbottlepr1name.setText("");
        lblbtavailbleqty.setText("");
        txtbottleprname.setText("");
        lblunitbt.setText("");
        txtbottlecost.setText("");
        txtcostperlabel.setText("");
        txtothercost.setText("");
        txtbottlemakingprice.setText("");
        lblbtlqty.setText("");
        txtquantity.setText("");
        txttotprice.setText("");
        bottledate.requestFocus();
        findbottlepr1ByName1 = null;
        findbottlepr1ByName2 = null;
    }

    private void btnbtaddKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnbtaddKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyChar() == KeyEvent.VK_ENTER) {
            if (!bottledate.equals(null)) {
                if (!txtbottlepr1name.getText().isEmpty()) {
                    if (!txtbottleprname.getText().isEmpty()) {
                        if (!txtbottlecost.getText().isEmpty()) {
                            if (!txtcostperlabel.getText().isEmpty()) {
                                if (!txtothercost.getText().isEmpty()) {
                                    if (!txtbottlemakingprice.getText().isEmpty()) {
                                        if (!txtquantity.getText().isEmpty()) {
                                            if (!txttotprice.getText().isEmpty()) {
                                                if (findbottlepr1ByName1 != null) {
                                                    if (findbottlepr1ByName2 != null) {
                                                        int ok = bottleadd();
                                                        if (ok != 0) {
                                                            saveExtraCosts();
                                                            int ook = new c.StockControler().getaverageprice(findbottlepr1ByName1);
                                                            if (ook != 0) {
                                                                Errormzg.displayconfirmMessage("stock added");
                                                                clearbtl();
                                                            } else {
                                                                Errormzg.displayerrorMessage("unable to add");
                                                            }

                                                        } else {
                                                            Errormzg.displayerrorMessage("unable to add moneybook");
                                                        }
                                                    } else {
                                                        Errormzg.displayerrorMessage("Please Set product and press Enter");
                                                    }
                                                } else {
                                                    Errormzg.displayerrorMessage("Please Set bottle product and press Enter");
                                                }
                                            } else {
                                                Errormzg.displayerrorMessage("Enter Fields");
                                            }
                                        } else {
                                            Errormzg.displayerrorMessage("Enter Fields");
                                        }
                                    } else {
                                        Errormzg.displayerrorMessage("Enter Fields");
                                    }
                                } else {
                                    Errormzg.displayerrorMessage("Enter Fields");
                                }
                            } else {
                                Errormzg.displayerrorMessage("Enter Fields");
                            }
                        } else {
                            Errormzg.displayerrorMessage("Enter Fields");
                        }
                    } else {
                        Errormzg.displayerrorMessage("Enter Fields");
                    }

                } else {
                    Errormzg.displayerrorMessage("Enter Fields");
                }
            } else {
                Errormzg.displayerrorMessage("Enter Fields");
            }

        }
    }//GEN-LAST:event_btnbtaddKeyPressed
    public void clear() {
        mixdate.setDate(null);
        txtpr1name.setText("");
        lblpr1qty.setText("");
        txtpr1quantity.setText("");
        txtpr2name.setText("");
        txtpr2quantity.setText("");
        txtmixquantity.setText("");
        txtaverageprice.setText("");
        lblpr2qty.setText("");
        mixdate.requestFocus();
        findPridByName1 = null;
        findPridByName2 = null;
    }
    private void btnaddKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnaddKeyTyped
        // TODO add your handling code here:
        if (evt.getKeyChar() == KeyEvent.VK_ENTER) {
            if (!mixdate.equals(null)) {
                if (!txtpr1name.getText().trim().isEmpty()) {
                    if (!txtpr1quantity.getText().trim().isEmpty()) {
                        if (!txtpr2name.getText().trim().isEmpty()) {
                            if (!txtpr2quantity.getText().trim().isEmpty()) {
                                if (!txtmixquantity.getText().trim().isEmpty()) {
                                    if (!txtaverageprice.getText().trim().isEmpty()) {
                                        if (findPridByName1 != null) {
                                            if (findPridByName2 != null) {
                                                int i = addMix();
                                                if (i != 0) {
                                                    clear();
                                                }
                                            } else {
                                                Errormzg.displayerrorMessage("Please Set product 2 and press Enter");
                                            }
                                        } else {
                                            Errormzg.displayerrorMessage("Please Set product 1 and press Enter");
                                        }
                                    } else {
                                        Errormzg.displayerrorMessage("Empty Fields");
                                    }
                                } else {
                                    Errormzg.displayerrorMessage("Empty Fields");
                                }
                            } else {
                                Errormzg.displayerrorMessage("Empty Fields");
                            }
                        } else {
                            Errormzg.displayerrorMessage("Empty Fields");
                        }
                    } else {
                        Errormzg.displayerrorMessage("Empty Fields");
                    }
                } else {
                    Errormzg.displayerrorMessage("Empty Fields");
                }

            } else {
                Errormzg.displayerrorMessage("Empty Fields");
            }

        }
    }//GEN-LAST:event_btnaddKeyTyped

    private void btnreset1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnreset1MouseReleased
        // TODO add your handling code here:
        clearbtl();
    }//GEN-LAST:event_btnreset1MouseReleased

    private void btnresetMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnresetMouseReleased
        // TODO add your handling code here:
        clear();
    }//GEN-LAST:event_btnresetMouseReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser bottledate;
    private javax.swing.JButton btnadd;
    private javax.swing.JButton btnbtadd;
    private javax.swing.JButton btnreset;
    private javax.swing.JButton btnreset1;
    private javax.swing.JComboBox<String> cmbtargetproduct;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lblbtavailbleqty;
    private javax.swing.JLabel lblbtlqty;
    private javax.swing.JLabel lblpr1qty;
    private javax.swing.JLabel lblpr2qty;
    private javax.swing.JLabel lblunitbt;
    private com.toedter.calendar.JDateChooser mixdate;
    private javax.swing.JTextField txtaverageprice;
    private javax.swing.JTextField txtbottlecost;
    private javax.swing.JTextField txtbottlemakingprice;
    private javax.swing.JTextField txtbottlepr1name;
    private javax.swing.JTextField txtbottleprname;
    private javax.swing.JTextField txtcostperlabel;
    private javax.swing.JTextField txtmixquantity;
    private javax.swing.JTextField txtothercost;
    private javax.swing.JTextField txtpr1name;
    private javax.swing.JTextField txtpr1quantity;
    private javax.swing.JTextField txtpr2name;
    private javax.swing.JTextField txtpr2quantity;
    private javax.swing.JTextField txtquantity;
    private javax.swing.JTextField txttotprice;
    // End of variables declaration//GEN-END:variables
}
