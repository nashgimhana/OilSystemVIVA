/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package v;

import c.AssetControl;
import c.AutoComplete;
import c.VehicleReturn;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTabbedPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import m.ValueValidation;
import net.sf.jasperreports.engine.JREmptyDataSource;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.view.JasperViewer;
import pojo.DealType;

/**
 *
 * @author Buddhika Prasanna
 */
public class frmVehicleReturn extends javax.swing.JFrame {

    /**
     * Creates new form frmVehicleReturn
     *
     * @param itemTable
     */
    static JTable itemTable;
    static JTextField txtRouteId;
    ValueValidation validation;
    static String deliverInfo;
    static Date deliverDate;
    static JTabbedPane tpDelivery;

    public frmVehicleReturn(JTable itemTable, JTextField txtRouteId, String deliverInfo, Date deliverDate, JTabbedPane tpDelivery) {
        initComponents();
        frmVehicleReturn.itemTable = itemTable;
        frmVehicleReturn.txtRouteId = txtRouteId;
        frmVehicleReturn.tpDelivery = tpDelivery;
        validation = new ValueValidation();
        new AutoComplete().autoCompleteBankName(txtBankName);
        frmVehicleReturn.deliverInfo = deliverInfo;
        frmVehicleReturn.deliverDate = deliverDate;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        dcReturnDate = new com.toedter.calendar.JDateChooser();
        txtReturnItem = new javax.swing.JTextField();
        txtRIQ = new javax.swing.JTextField();
        txtTotalSale = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        txtCashAmount = new javax.swing.JTextField();
        txtCheckAmount = new javax.swing.JTextField();
        txtPayAmount = new javax.swing.JTextField();
        txtCreditAmount = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        cmbCategory = new javax.swing.JComboBox<>();
        jLabel12 = new javax.swing.JLabel();
        cmbType = new javax.swing.JComboBox<>();
        jLabel13 = new javax.swing.JLabel();
        txtAmount = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        txtRemark = new javax.swing.JTextField();
        btnAdd = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCD = new javax.swing.JTable();
        jPanel8 = new javax.swing.JPanel();
        btnBack = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        btnReport = new javax.swing.JButton();
        jPanel9 = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        txtBankName = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        txtCAmount = new javax.swing.JTextField();
        btnCheckAdd = new javax.swing.JButton();
        txtCheckNumber = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        dcReturnDate1 = new com.toedter.calendar.JDateChooser();
        jLabel21 = new javax.swing.JLabel();
        txtDescrip = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblCheck = new javax.swing.JTable();
        jPanel11 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jPanel12 = new javax.swing.JPanel();
        txtDeleverCost = new javax.swing.JTextField();
        txtProductionCost = new javax.swing.JTextField();
        txGrossProfit = new javax.swing.JTextField();
        txNetProfit = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        setType(java.awt.Window.Type.UTILITY);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel2.setLayout(new java.awt.GridLayout(4, 0, 5, 5));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Return Date");
        jPanel2.add(jLabel1);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Return Item");
        jPanel2.add(jLabel2);

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Return Item Qty");
        jPanel2.add(jLabel3);

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Total Sale");
        jPanel2.add(jLabel5);

        jPanel3.setLayout(new java.awt.GridLayout(4, 0, 5, 5));

        dcReturnDate.setDateFormatString("yyyy-MM-dd");
        dcReturnDate.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jPanel3.add(dcReturnDate);

        txtReturnItem.setBackground(new java.awt.Color(240, 240, 240));
        txtReturnItem.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtReturnItem.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtReturnItem.setText("0");
        txtReturnItem.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(51, 153, 255)));
        jPanel3.add(txtReturnItem);

        txtRIQ.setBackground(new java.awt.Color(240, 240, 240));
        txtRIQ.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtRIQ.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtRIQ.setText("0");
        txtRIQ.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(51, 153, 255)));
        jPanel3.add(txtRIQ);

        txtTotalSale.setBackground(new java.awt.Color(240, 240, 240));
        txtTotalSale.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtTotalSale.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtTotalSale.setText("0");
        txtTotalSale.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(51, 153, 255)));
        txtTotalSale.setNextFocusableComponent(txtCashAmount);
        txtTotalSale.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtTotalSaleFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtTotalSaleFocusLost(evt);
            }
        });
        txtTotalSale.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTotalSaleKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtTotalSaleKeyTyped(evt);
            }
        });
        jPanel3.add(txtTotalSale);

        jPanel4.setLayout(new java.awt.GridLayout(4, 0, 5, 5));

        txtCashAmount.setBackground(new java.awt.Color(240, 240, 240));
        txtCashAmount.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtCashAmount.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtCashAmount.setText("0");
        txtCashAmount.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(51, 153, 255)));
        txtCashAmount.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtCashAmountFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtCashAmountFocusLost(evt);
            }
        });
        txtCashAmount.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCashAmountKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCashAmountKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCashAmountKeyTyped(evt);
            }
        });
        jPanel4.add(txtCashAmount);

        txtCheckAmount.setBackground(new java.awt.Color(240, 240, 240));
        txtCheckAmount.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtCheckAmount.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtCheckAmount.setText("0");
        txtCheckAmount.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(51, 153, 255)));
        txtCheckAmount.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtCheckAmountFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtCheckAmountFocusLost(evt);
            }
        });
        txtCheckAmount.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCheckAmountKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCheckAmountKeyTyped(evt);
            }
        });
        jPanel4.add(txtCheckAmount);

        txtPayAmount.setEditable(false);
        txtPayAmount.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtPayAmount.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtPayAmount.setText("0");
        txtPayAmount.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(51, 153, 255)));
        txtPayAmount.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtPayAmountFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtPayAmountFocusLost(evt);
            }
        });
        txtPayAmount.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPayAmountKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPayAmountKeyTyped(evt);
            }
        });
        jPanel4.add(txtPayAmount);

        txtCreditAmount.setEditable(false);
        txtCreditAmount.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtCreditAmount.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtCreditAmount.setText("0");
        txtCreditAmount.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(51, 153, 255)));
        txtCreditAmount.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtCreditAmountFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtCreditAmountFocusLost(evt);
            }
        });
        txtCreditAmount.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCreditAmountKeyTyped(evt);
            }
        });
        jPanel4.add(txtCreditAmount);

        jPanel5.setLayout(new java.awt.GridLayout(4, 0, 5, 5));

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("Cash Amount");
        jPanel5.add(jLabel7);

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setText("Check Amount");
        jPanel5.add(jLabel8);

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel10.setText("Credit Pay Amount");
        jPanel5.add(jLabel10);

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel9.setText("Credit Amount");
        jPanel5.add(jLabel9);

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel11.setText("Category");

        cmbCategory.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel12.setText("Type");

        cmbType.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cmbType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Income", "Expend" }));

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel13.setText("Amount");

        txtAmount.setBackground(new java.awt.Color(240, 240, 240));
        txtAmount.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtAmount.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtAmount.setText("0");
        txtAmount.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(51, 153, 255)));
        txtAmount.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtAmountFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtAmountFocusLost(evt);
            }
        });
        txtAmount.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtAmountKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtAmountKeyTyped(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel14.setText("Remark");

        txtRemark.setEditable(false);
        txtRemark.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtRemark.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtRemark.setText("Vehicle Return");
        txtRemark.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(51, 153, 255)));

        btnAdd.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        btnAdd.setText("Add");
        btnAdd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btnAddMouseReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmbCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(99, 99, 99)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmbType, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(100, 100, 100)
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtRemark, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(88, 88, 88)
                .addComponent(btnAdd)
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(cmbCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12)
                    .addComponent(cmbType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13)
                    .addComponent(txtAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14)
                    .addComponent(txtRemark, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAdd))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        tblCD.setRowHeight(25);
        tblCD.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tblCD.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Category", "Type", "Amount", "Remark"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblCD.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tblCDKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tblCDKeyTyped(evt);
            }
        });
        jScrollPane1.setViewportView(tblCD);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 124, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel8.setLayout(new java.awt.GridLayout(1, 0, 10, 10));

        btnBack.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnBack.setText("Back");
        btnBack.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btnBackMouseReleased(evt);
            }
        });
        jPanel8.add(btnBack);

        btnSave.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnSave.setText("Save");
        btnSave.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btnSaveMouseReleased(evt);
            }
        });
        jPanel8.add(btnSave);

        btnReport.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnReport.setText("Report");
        btnReport.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btnReportMouseReleased(evt);
            }
        });
        jPanel8.add(btnReport);

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel15.setText("Cheque Number");

        jLabel17.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel17.setText("Bank Name");

        txtBankName.setBackground(new java.awt.Color(240, 240, 240));
        txtBankName.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtBankName.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(51, 153, 255)));
        txtBankName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBankNameKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtBankNameKeyTyped(evt);
            }
        });

        jLabel18.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel18.setText("Amount");

        txtCAmount.setBackground(new java.awt.Color(240, 240, 240));
        txtCAmount.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtCAmount.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtCAmount.setText("0");
        txtCAmount.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(51, 153, 255)));
        txtCAmount.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtCAmountFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtCAmountFocusLost(evt);
            }
        });
        txtCAmount.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCAmountKeyReleased(evt);
            }
        });

        btnCheckAdd.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        btnCheckAdd.setText("Add");
        btnCheckAdd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btnCheckAddMouseReleased(evt);
            }
        });

        txtCheckNumber.setBackground(new java.awt.Color(240, 240, 240));
        txtCheckNumber.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtCheckNumber.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(51, 153, 255)));
        txtCheckNumber.setNextFocusableComponent(txtAmount);

        jLabel20.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel20.setText("Return Date");

        dcReturnDate1.setDateFormatString("yyyy-MM-dd");
        dcReturnDate1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel21.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel21.setText("Description");

        txtDescrip.setBackground(new java.awt.Color(240, 240, 240));
        txtDescrip.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtDescrip.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtDescrip.setText("None");
        txtDescrip.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(51, 153, 255)));
        txtDescrip.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtDescripFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtDescripFocusLost(evt);
            }
        });
        txtDescrip.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtDescripKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel15)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtCheckNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel20)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(dcReturnDate1, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel17)
                .addGap(18, 18, 18)
                .addComponent(txtBankName, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel18)
                .addGap(18, 18, 18)
                .addComponent(txtCAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel21)
                .addGap(18, 18, 18)
                .addComponent(txtDescrip, javax.swing.GroupLayout.DEFAULT_SIZE, 145, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnCheckAdd)
                .addContainerGap())
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(dcReturnDate1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel20)
                    .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel21)
                            .addComponent(txtDescrip, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel15)
                            .addComponent(jLabel17)
                            .addComponent(txtBankName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel18)
                            .addComponent(txtCAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCheckNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(24, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnCheckAdd)
                .addContainerGap())
        );

        tblCheck.setRowHeight(25);
        tblCheck.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tblCheck.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cheque Number", "Bank Name", "Amount", "Date", "Description"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblCheck.getTableHeader().setReorderingAllowed(false);
        tblCheck.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tblCheckKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tblCheckKeyTyped(evt);
            }
        });
        jScrollPane2.setViewportView(tblCheck);
        if (tblCheck.getColumnModel().getColumnCount() > 0) {
            tblCheck.getColumnModel().getColumn(0).setResizable(false);
            tblCheck.getColumnModel().getColumn(1).setResizable(false);
            tblCheck.getColumnModel().getColumn(2).setResizable(false);
            tblCheck.getColumnModel().getColumn(3).setResizable(false);
            tblCheck.getColumnModel().getColumn(3).setPreferredWidth(10);
            tblCheck.getColumnModel().getColumn(4).setResizable(false);
            tblCheck.getColumnModel().getColumn(4).setPreferredWidth(100);
        }

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2))
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 142, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel11.setLayout(new java.awt.GridLayout(4, 0, 5, 5));

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Delever Cost");
        jPanel11.add(jLabel4);

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("Product Cost");
        jPanel11.add(jLabel6);

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel16.setText("Gross Prifit");
        jPanel11.add(jLabel16);

        jLabel19.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel19.setText("Net Prifit");
        jPanel11.add(jLabel19);

        jPanel12.setLayout(new java.awt.GridLayout(4, 0, 5, 5));

        txtDeleverCost.setBackground(new java.awt.Color(240, 240, 240));
        txtDeleverCost.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtDeleverCost.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtDeleverCost.setText("0");
        txtDeleverCost.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(51, 153, 255)));
        jPanel12.add(txtDeleverCost);

        txtProductionCost.setBackground(new java.awt.Color(240, 240, 240));
        txtProductionCost.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtProductionCost.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtProductionCost.setText("0");
        txtProductionCost.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(51, 153, 255)));
        jPanel12.add(txtProductionCost);

        txGrossProfit.setEditable(false);
        txGrossProfit.setBackground(new java.awt.Color(240, 240, 240));
        txGrossProfit.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txGrossProfit.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txGrossProfit.setText("0");
        txGrossProfit.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(51, 153, 255)));
        txGrossProfit.setEnabled(false);
        jPanel12.add(txGrossProfit);

        txNetProfit.setBackground(new java.awt.Color(240, 240, 240));
        txNetProfit.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txNetProfit.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txNetProfit.setText("0");
        txNetProfit.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(51, 153, 255)));
        jPanel12.add(txNetProfit);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(153, 153, 153)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, 471, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, 126, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, 126, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, 126, Short.MAX_VALUE)
                    .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        dcReturnDate.setDate(new Date());
        List<DealType> all = new m.DealType().getAll();
        for (DealType dealType : all) {
            cmbCategory.addItem(dealType.getType());
        }
        VehicleReturn vehicleReturn = new VehicleReturn();
        vehicleReturn.calProductCost(itemTable, txtProductionCost);
        vehicleReturn.calDeleverCost(deliverInfo, deliverDate, txtDeleverCost);
        calGrossProfit();
    }//GEN-LAST:event_formWindowOpened

    private void btnAddMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAddMouseReleased
        // TODO add your handling code here:        
        if (cmbType.getSelectedItem().toString().equals("Income")) {
            double cashAmount = Double.parseDouble(txtCashAmount.getText());
            cashAmount += Double.parseDouble(txtAmount.getText());
            txtCashAmount.setText(String.valueOf(Math.round(cashAmount * 100.0) / 100.0));
            try {
                if (cmbCategory.getSelectedItem().toString().equals("Route Credit Pay")) {
                    double creditAmount = Double.parseDouble(txtTotalSale.getText()) - (Double.parseDouble(txtCashAmount.getText()) + Double.parseDouble(txtCheckAmount.getText()));// + Double.parseDouble(txtPayAmount.getText()
                    if (creditAmount < 0) {
                        creditAmount = (creditAmount * -1);
                        txtPayAmount.setText(String.valueOf(Math.round(creditAmount * 100) / 100));
                        txtCreditAmount.setText("0");
                    } else {
                        txtCreditAmount.setText(String.valueOf(Math.round(creditAmount * 100) / 100));
                        txtPayAmount.setText("0");
                    }
                }
                calNetProfit();
            } catch (Exception e) {
                e.printStackTrace();
            }
        } else if (cmbType.getSelectedItem().toString().equals("Expend")) {
            if (txtTotalSale.getText().isEmpty()) {
                try {
                    double totalSale = 0.0;
                    double deliverCost = Double.parseDouble(txtDeleverCost.getText());
                    deliverCost += Double.parseDouble(txtAmount.getText());
                    txtDeleverCost.setText(String.valueOf(Math.round(deliverCost * 100.0) / 100.0));
                    deliverCost = Double.parseDouble(txtDeleverCost.getText());
                    double productCost = Double.parseDouble(txtProductionCost.getText());
                    double grossProfit = totalSale - (deliverCost + productCost);
                    txGrossProfit.setText(String.valueOf(Math.round(grossProfit * 100.0) / 100.0));
                } catch (Exception e) {
                    e.printStackTrace();
                    JOptionPane.showMessageDialog(null, e, "Error", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                try {
                    double totalSale = Double.parseDouble(txtTotalSale.getText());
                    double deliverCost = Double.parseDouble(txtDeleverCost.getText());
                    deliverCost += Double.parseDouble(txtAmount.getText());
                    txtDeleverCost.setText(String.valueOf(Math.round(deliverCost * 100.0) / 100.0));
                    deliverCost = Double.parseDouble(txtDeleverCost.getText());
                    double productCost = Double.parseDouble(txtProductionCost.getText());
                    double grossProfit = totalSale - (deliverCost + productCost);
                    txGrossProfit.setText(String.valueOf(Math.round(grossProfit * 100.0) / 100.0));
                } catch (Exception e) {
                    e.printStackTrace();
                    JOptionPane.showMessageDialog(null, e, "Error", JOptionPane.ERROR_MESSAGE);
                }
            }

            try {
                double creditAmount = Double.parseDouble(txtTotalSale.getText()) - (Double.parseDouble(txtCashAmount.getText()) + Double.parseDouble(txtCheckAmount.getText()));// + Double.parseDouble(txtPayAmount.getText()
                if (creditAmount < 0) {
                    creditAmount = (creditAmount * -1);
                    txtPayAmount.setText(String.valueOf(Math.round(creditAmount * 100) / 100));
                    txtCreditAmount.setText("0");
                } else {
                    txtCreditAmount.setText(String.valueOf(Math.round(creditAmount * 100) / 100));
                    txtPayAmount.setText("0");
                }
                calNetProfit();
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
        new c.VehicleReturn().addReturnCD(cmbCategory, cmbType, txtAmount, txtRemark, tblCD);
    }//GEN-LAST:event_btnAddMouseReleased

    private void tblCDKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblCDKeyTyped
        // TODO add your handling code here:
        if (evt.isControlDown() & evt.getKeyChar() == KeyEvent.VK_DELETE) {
            new c.DeleveryItemTable().removeAllItem(tblCD);
        } else if (evt.getKeyChar() == KeyEvent.VK_DELETE) {
            if (tblCD.getValueAt(tblCD.getSelectedRow(), 1).toString().equals("Income")) {
                double cashAmount = Double.parseDouble(txtCashAmount.getText());
                cashAmount -= Double.parseDouble(tblCD.getValueAt(tblCD.getSelectedRow(), 2).toString());
                txtCashAmount.setText(String.valueOf(Math.round(cashAmount * 100.0) / 100.0));
                try {
                    double creditAmount = Double.parseDouble(txtTotalSale.getText()) - (Double.parseDouble(txtCashAmount.getText()) + Double.parseDouble(txtCheckAmount.getText()));// + Double.parseDouble(txtPayAmount.getText()
                    if (creditAmount < 0) {
                        creditAmount = (creditAmount * -1);
                        txtPayAmount.setText(String.valueOf(Math.round(creditAmount * 100) / 100));
                        txtCreditAmount.setText("0");
                    } else {
                        txtCreditAmount.setText(String.valueOf(Math.round(creditAmount * 100) / 100));
                        txtPayAmount.setText("0");
                    }
                    calNetProfit();
                } catch (Exception e) {
                    e.printStackTrace();
                }
            } else if (tblCD.getValueAt(tblCD.getSelectedRow(), 1).toString().equals("Expend")) {
                if (txtTotalSale.getText().isEmpty()) {
                    try {
                        double totalSale = 0.0;
                        double deliverCost = Double.parseDouble(txtDeleverCost.getText());
                        deliverCost -= Double.parseDouble(tblCD.getValueAt(tblCD.getSelectedRow(), 2).toString());
                        txtDeleverCost.setText(String.valueOf(Math.round(deliverCost * 100.0) / 100.0));
                        deliverCost = Double.parseDouble(txtDeleverCost.getText());
                        double productCost = Double.parseDouble(txtProductionCost.getText());
                        double grossProfit = totalSale - (deliverCost + productCost);
                        txGrossProfit.setText(String.valueOf(Math.round(grossProfit * 100.0) / 100.0));
                    } catch (Exception e) {
                        e.printStackTrace();
                        JOptionPane.showMessageDialog(null, e, "Error", JOptionPane.ERROR_MESSAGE);
                    }
                } else {
                    try {
                        double totalSale = Double.parseDouble(txtTotalSale.getText());
                        double deliverCost = Double.parseDouble(txtDeleverCost.getText());
                        deliverCost -= Double.parseDouble(tblCD.getValueAt(tblCD.getSelectedRow(), 2).toString());
                        txtDeleverCost.setText(String.valueOf(Math.round(deliverCost * 100.0) / 100.0));
                        deliverCost = Double.parseDouble(txtDeleverCost.getText());
                        double productCost = Double.parseDouble(txtProductionCost.getText());
                        double grossProfit = totalSale - (deliverCost + productCost);
                        txGrossProfit.setText(String.valueOf(Math.round(grossProfit * 100.0) / 100.0));
                    } catch (Exception e) {
                        e.printStackTrace();
                        JOptionPane.showMessageDialog(null, e, "Error", JOptionPane.ERROR_MESSAGE);
                    }
                }

                try {
                    double creditAmount = Double.parseDouble(txtTotalSale.getText()) - (Double.parseDouble(txtCashAmount.getText()) + Double.parseDouble(txtCheckAmount.getText()));// + Double.parseDouble(txtPayAmount.getText()
                    if (creditAmount < 0) {
                        creditAmount = (creditAmount * -1);
                        txtPayAmount.setText(String.valueOf(Math.round(creditAmount * 100) / 100));
                        txtCreditAmount.setText("0");
                    } else {
                        txtCreditAmount.setText(String.valueOf(Math.round(creditAmount * 100) / 100));
                        txtPayAmount.setText("0");
                    }
                    calNetProfit();
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
            new c.DeleveryItemTable().removeItem(tblCD);
        }
    }//GEN-LAST:event_tblCDKeyTyped

    private void txtTotalSaleFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTotalSaleFocusGained
        // TODO add your handling code here:
        if ("0".equals(txtTotalSale.getText())) {
            txtTotalSale.setText("");
        }
    }//GEN-LAST:event_txtTotalSaleFocusGained

    private void txtTotalSaleFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTotalSaleFocusLost
        // TODO add your handling code here:
        if ("".equals(txtTotalSale.getText())) {
            txtTotalSale.setText("0");
        }
    }//GEN-LAST:event_txtTotalSaleFocusLost

    private void txtCashAmountFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCashAmountFocusGained
        // TODO add your handling code here:
        if ("0".equals(txtCashAmount.getText())) {
            txtCashAmount.setText("");
        }
    }//GEN-LAST:event_txtCashAmountFocusGained

    private void txtCashAmountFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCashAmountFocusLost
        // TODO add your handling code here:
        if ("".equals(txtCashAmount.getText())) {
            txtCashAmount.setText("0");
        }
    }//GEN-LAST:event_txtCashAmountFocusLost

    private void txtCheckAmountFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCheckAmountFocusGained
        // TODO add your handling code here:
        if ("0".equals(txtCheckAmount.getText())) {
            txtCheckAmount.setText("");
        }
    }//GEN-LAST:event_txtCheckAmountFocusGained

    private void txtCheckAmountFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCheckAmountFocusLost
        // TODO add your handling code here:
        if ("".equals(txtCheckAmount.getText())) {
            txtCheckAmount.setText("0");
        }
    }//GEN-LAST:event_txtCheckAmountFocusLost

    private void txtCreditAmountFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCreditAmountFocusGained
        // TODO add your handling code here:
        if ("0".equals(txtCreditAmount.getText())) {
            txtCreditAmount.setText("");
        }
    }//GEN-LAST:event_txtCreditAmountFocusGained

    private void txtCreditAmountFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCreditAmountFocusLost
        // TODO add your handling code here:
        if ("".equals(txtCreditAmount.getText())) {
            txtCreditAmount.setText("0");
        }
    }//GEN-LAST:event_txtCreditAmountFocusLost

    private void txtPayAmountFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPayAmountFocusGained
        // TODO add your handling code here:
        if ("0".equals(txtPayAmount.getText())) {
            txtPayAmount.setText("");
        }
    }//GEN-LAST:event_txtPayAmountFocusGained

    private void txtPayAmountFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPayAmountFocusLost
        // TODO add your handling code here:
        if ("".equals(txtPayAmount.getText())) {
            txtPayAmount.setText("0");
        }
    }//GEN-LAST:event_txtPayAmountFocusLost

    private void tblCDKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblCDKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_tblCDKeyReleased

    public void getReturnReport(JFrame frame) {
        try {
            String path = "C:\\Program Files\\Common Files\\Report\\VehicleReturn.jrxml";
            JasperReport RI = JasperCompileManager.compileReport(path);
            Map<String, Object> parameter = new HashMap<String, Object>();
            parameter.put("TotalSale", Double.parseDouble(txtTotalSale.getText()));
            parameter.put("CashAmount", Double.parseDouble(txtCashAmount.getText()));
            parameter.put("ChequeAmount", Double.parseDouble(txtCheckAmount.getText()));
            parameter.put("CreditPayAmount", Double.parseDouble(txtPayAmount.getText()));
            parameter.put("CreditAmount", Double.parseDouble(txtCreditAmount.getText()));
            parameter.put("DeliverCost", Double.parseDouble(txtDeleverCost.getText()));
            parameter.put("ProductCost", Double.parseDouble(txtProductionCost.getText()));
            parameter.put("GrossProfit", Double.parseDouble(txGrossProfit.getText()));
            parameter.put("NetProfit", Double.parseDouble(txNetProfit.getText()));
            JasperPrint printit = JasperFillManager.fillReport(RI, parameter, new JREmptyDataSource());
            //JasperPrintManager.printReport(printit, false);
            JasperViewer.viewReport(printit, false);
        } catch (Exception e) {
            Toolkit.getDefaultToolkit().beep();
            JOptionPane.showMessageDialog(frame, e, "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    public void createReportDocs() {
        Path path = Paths.get("D:\\ReportDocs");
        //if directory exists?
        if (!Files.exists(path)) {
            try {
                Files.createDirectories(path);
            } catch (Exception e) {
                //fail to create directory
                e.printStackTrace();
            }
        } else {
            createFile();
        }
    }

    public void createFile() {
        String[] para = {txtTotalSale.getText() + "/" + txtCashAmount.getText() + "/" + txtCheckAmount.getText() + "/" + txtPayAmount.getText() + "/" + txtCreditAmount.getText() + "/" + txtDeleverCost.getText() + "/" + txtProductionCost.getText() + "/" + txGrossProfit.getText() + "/" + txNetProfit.getText()};
        try {

            File f = new File(new SimpleDateFormat("yyyy-MM-dd").format(deliverDate) + "/" + deliverInfo + ".txt");
            FileWriter writer = new FileWriter("D:\\ReportDocs\\" + new SimpleDateFormat("yyyy-MM-dd").format(deliverDate) + "_" + deliverInfo.split("/")[0] + "_" + deliverInfo.split("/")[1] + ".txt", true);
            writer.write(para[0]);
            writer.close();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    private void btnSaveMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSaveMouseReleased
        // TODO add your handling code here:
        c.VehicleReturn vehicleReturn = new c.VehicleReturn();
        int updateQty = vehicleReturn.updateQty(itemTable, tblCD, dcReturnDate);
        if (updateQty == 1) {
            vehicleReturn.saveRouteDebit(dcReturnDate, "Total Deliver Sale", Double.parseDouble(txtTotalSale.getText()), "Cash", "Total Deliver Sale", "Income", txtRouteId);
            vehicleReturn.saveRouteDebit(dcReturnDate, "Deliver Cash", Double.parseDouble(txtCashAmount.getText()), "Cash", "Deliver Cash", "Income", txtRouteId);
            //vehicleReturn.saveRouteDebit(dcReturnDate, "Deliver Cheque", Double.parseDouble(txtCheckAmount.getText()), "Cheque", "Deliver Cheque", "Income", txtRouteId);
            vehicleReturn.saveCheck(dcReturnDate, txtRouteId, tblCheck);
            vehicleReturn.saveRouteCredit(dcReturnDate, Double.parseDouble(txtCreditAmount.getText()), txtRouteId);
            vehicleReturn.saveRouteDebit(dcReturnDate, "Deliver Credit Pay", Double.parseDouble(txtPayAmount.getText()), "Cash", "Deliver Credit Pay", "Income", txtRouteId);
            AssetControl.getInstance().updateCashAsset(Double.parseDouble(txtCashAmount.getText()), '+');
            getReturnReport(this);
            createReportDocs();
            DefaultTableModel dtm = (DefaultTableModel) tblCD.getModel();
            dtm.setRowCount(0);
            JOptionPane.showMessageDialog(this, "Deliver Return successfuly", "Deliver Return", JOptionPane.INFORMATION_MESSAGE);
            this.dispose();
        }

    }//GEN-LAST:event_btnSaveMouseReleased

    private void calGrossProfit() {
        try {
            double totalSale = Double.parseDouble(txtTotalSale.getText());
            double deliverCost = Double.parseDouble(txtDeleverCost.getText());
            double productCost = Double.parseDouble(txtProductionCost.getText());
            double grossProfit = totalSale - (deliverCost + productCost);
            txGrossProfit.setText(String.valueOf(Math.round(grossProfit * 100.0) / 100.0));
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, e, "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void txtTotalSaleKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTotalSaleKeyTyped
        // TODO add your handling code here:
        char vChar = evt.getKeyChar();
        if (!(Character.isDigit(vChar)
                || (vChar == KeyEvent.VK_BACK_SPACE)
                || (vChar == KeyEvent.VK_DELETE) || vChar == KeyEvent.VK_PERIOD)) {
            evt.consume();
        }
    }//GEN-LAST:event_txtTotalSaleKeyTyped

    private void txtCashAmountKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCashAmountKeyTyped
        // TODO add your handling code here:
        char vChar = evt.getKeyChar();
        if (!(Character.isDigit(vChar)
                || (vChar == KeyEvent.VK_BACK_SPACE)
                || (vChar == KeyEvent.VK_DELETE) || vChar == KeyEvent.VK_PERIOD)) {
            evt.consume();
        }
    }//GEN-LAST:event_txtCashAmountKeyTyped

    private void txtCheckAmountKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCheckAmountKeyTyped
        // TODO add your handling code here:
        char vChar = evt.getKeyChar();
        if (!(Character.isDigit(vChar) || (vChar == KeyEvent.VK_BACK_SPACE) || (vChar == KeyEvent.VK_DELETE) || vChar == KeyEvent.VK_PERIOD)) {
            evt.consume();
        }
    }//GEN-LAST:event_txtCheckAmountKeyTyped

    private void txtCreditAmountKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCreditAmountKeyTyped
        // TODO add your handling code here:
        char vChar = evt.getKeyChar();
        if (!(Character.isDigit(vChar) || (vChar == KeyEvent.VK_BACK_SPACE) || (vChar == KeyEvent.VK_DELETE) || vChar == KeyEvent.VK_PERIOD)) {
            evt.consume();
        }
    }//GEN-LAST:event_txtCreditAmountKeyTyped

    private void txtPayAmountKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPayAmountKeyTyped
        // TODO add your handling code here:
        char vChar = evt.getKeyChar();
        if (!(Character.isDigit(vChar)
                || (vChar == KeyEvent.VK_BACK_SPACE)
                || (vChar == KeyEvent.VK_DELETE) || vChar == KeyEvent.VK_PERIOD)) {
            evt.consume();
        }
    }//GEN-LAST:event_txtPayAmountKeyTyped

    private void txtAmountKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAmountKeyTyped
        // TODO add your handling code here:
        char vChar = evt.getKeyChar();
        if (!(Character.isDigit(vChar) || (vChar == KeyEvent.VK_BACK_SPACE) || (vChar == KeyEvent.VK_DELETE) || vChar == KeyEvent.VK_PERIOD)) {
            evt.consume();
        }
        if (evt.getKeyChar() == KeyEvent.VK_ENTER) {
            if (!txtAmount.getText().isEmpty()) {
                if (cmbType.getSelectedItem().toString().equals("Income")) {
                    double cashAmount = Double.parseDouble(txtCashAmount.getText());
                    cashAmount += Double.parseDouble(txtAmount.getText());
                    txtCashAmount.setText(String.valueOf(Math.round(cashAmount * 100.0) / 100.0));
                    try {
                        if (cmbCategory.getSelectedItem().toString().equals("Route Credit Pay")) {
                            double creditAmount = Double.parseDouble(txtTotalSale.getText()) - (Double.parseDouble(txtCashAmount.getText()) + Double.parseDouble(txtCheckAmount.getText()));// + Double.parseDouble(txtPayAmount.getText()
                            if (creditAmount < 0) {
                                creditAmount = (creditAmount * -1);
                                txtPayAmount.setText(String.valueOf(Math.round(creditAmount * 100) / 100));
                                txtCreditAmount.setText("0");
                            } else {
                                txtCreditAmount.setText(String.valueOf(Math.round(creditAmount * 100) / 100));
                                txtPayAmount.setText("0");
                            }
                        }
                        calNetProfit();
                    } catch (Exception e) {
                        e.printStackTrace();
                    }
                } else if (cmbType.getSelectedItem().toString().equals("Expend")) {
                    if (txtTotalSale.getText().isEmpty()) {
                        try {
                            double totalSale = 0.0;
                            double deliverCost = Double.parseDouble(txtDeleverCost.getText());
                            deliverCost += Double.parseDouble(txtAmount.getText());
                            txtDeleverCost.setText(String.valueOf(Math.round(deliverCost * 100.0) / 100.0));
                            deliverCost = Double.parseDouble(txtDeleverCost.getText());
                            double productCost = Double.parseDouble(txtProductionCost.getText());
                            double grossProfit = totalSale - (deliverCost + productCost);
                            txGrossProfit.setText(String.valueOf(Math.round(grossProfit * 100.0) / 100.0));
                        } catch (Exception e) {
                            e.printStackTrace();
                            JOptionPane.showMessageDialog(null, e, "Error", JOptionPane.ERROR_MESSAGE);
                        }
                    } else {
                        try {
                            double totalSale = Double.parseDouble(txtTotalSale.getText());
                            double deliverCost = Double.parseDouble(txtDeleverCost.getText());
                            deliverCost += Double.parseDouble(txtAmount.getText());
                            txtDeleverCost.setText(String.valueOf(Math.round(deliverCost * 100.0) / 100.0));
                            deliverCost = Double.parseDouble(txtDeleverCost.getText());
                            double productCost = Double.parseDouble(txtProductionCost.getText());
                            double grossProfit = totalSale - (deliverCost + productCost);
                            txGrossProfit.setText(String.valueOf(Math.round(grossProfit * 100.0) / 100.0));
                        } catch (Exception e) {
                            e.printStackTrace();
                            JOptionPane.showMessageDialog(null, e, "Error", JOptionPane.ERROR_MESSAGE);
                        }
                    }

                    try {
                        double creditAmount = Double.parseDouble(txtTotalSale.getText()) - (Double.parseDouble(txtCashAmount.getText()) + Double.parseDouble(txtCheckAmount.getText()));// + Double.parseDouble(txtPayAmount.getText()
                        if (creditAmount < 0) {
                            creditAmount = (creditAmount * -1);
                            txtPayAmount.setText(String.valueOf(Math.round(creditAmount * 100) / 100));
                            txtCreditAmount.setText("0");
                        } else {
                            txtCreditAmount.setText(String.valueOf(Math.round(creditAmount * 100) / 100));
                            txtPayAmount.setText("0");
                        }
                        calNetProfit();
                    } catch (Exception e) {
                        e.printStackTrace();
                    }
                }
                new c.VehicleReturn().addReturnCD(cmbCategory, cmbType, txtAmount, txtRemark, tblCD);
            }
        }
    }//GEN-LAST:event_txtAmountKeyTyped

    private void txtAmountKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAmountKeyReleased
        // TODO add your handling code here:

    }//GEN-LAST:event_txtAmountKeyReleased

    private void btnBackMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBackMouseReleased
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_btnBackMouseReleased

    private void txtCashAmountKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCashAmountKeyReleased
        // TODO add your handling code here:
        try {
            if (!txtCashAmount.getText().isEmpty()) {
                double creditAmount = Double.parseDouble(txtTotalSale.getText()) - (Double.parseDouble(txtCashAmount.getText()) + Double.parseDouble(txtCheckAmount.getText()));// + Double.parseDouble(txtPayAmount.getText()
                if (creditAmount < 0) {
                    creditAmount = (creditAmount * -1);
                    txtPayAmount.setText(String.valueOf(Math.round(creditAmount * 100) / 100));
                    txtCreditAmount.setText("0");
                } else {
                    txtCreditAmount.setText(String.valueOf(Math.round(creditAmount * 100) / 100));
                    txtPayAmount.setText("0");
                }
            }
            calNetProfit();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_txtCashAmountKeyReleased

    private void txtCheckAmountKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCheckAmountKeyReleased
        // TODO add your handling code here:
        try {
            if (!txtCheckAmount.getText().isEmpty()) {
                double creditAmount = Double.parseDouble(txtTotalSale.getText()) - (Double.parseDouble(txtCashAmount.getText()) + Double.parseDouble(txtCheckAmount.getText()) + Double.parseDouble(txtPayAmount.getText()));
                if (creditAmount < 0) {
                    creditAmount = (creditAmount * -1);
                    txtPayAmount.setText(String.valueOf(Math.round(creditAmount * 100) / 100));
                    txtCreditAmount.setText("0");
                } else {
                    txtCreditAmount.setText(String.valueOf(Math.round(creditAmount * 100) / 100));
                    txtPayAmount.setText("0");
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_txtCheckAmountKeyReleased

    private void txtPayAmountKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPayAmountKeyReleased
        // TODO add your handling code here:
        try {
            if (!txtPayAmount.getText().isEmpty()) {
                double creditAmount = Double.parseDouble(txtTotalSale.getText()) - (Double.parseDouble(txtCashAmount.getText()) + Double.parseDouble(txtCheckAmount.getText()));// + Double.parseDouble(txtPayAmount.getText())
                if (creditAmount < 0) {
                    creditAmount = (creditAmount * -1);
                    txtPayAmount.setText(String.valueOf(Math.round(creditAmount * 100) / 100));
                    txtCreditAmount.setText("0");
                } else {
                    txtCreditAmount.setText(String.valueOf(Math.round(creditAmount * 100) / 100));
                    txtPayAmount.setText("0");
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_txtPayAmountKeyReleased

    private void txtBankNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBankNameKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBankNameKeyReleased

    private void txtBankNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBankNameKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBankNameKeyTyped

    private void calNetProfit() {
        try {
            if (txtCashAmount.getText().isEmpty()) {
                double cashAmount = 0.0;
                double chequeAmount = Double.parseDouble(txtCheckAmount.getText());
                double CpayAmount = Double.parseDouble(txtPayAmount.getText());
                double creditAmount = Double.parseDouble(txtCreditAmount.getText());

                double deliverCost = Double.parseDouble(txtDeleverCost.getText());
                double productCost = Double.parseDouble(txtProductionCost.getText());

                double netProfit = (cashAmount + chequeAmount + creditAmount) - (deliverCost + productCost + CpayAmount);
                txNetProfit.setText(String.valueOf(Math.round(netProfit * 100.0) / 100.0));
            } else {
                double cashAmount = Double.parseDouble(txtCashAmount.getText());
                double chequeAmount = Double.parseDouble(txtCheckAmount.getText());
                double CpayAmount = Double.parseDouble(txtPayAmount.getText());
                double creditAmount = Double.parseDouble(txtCreditAmount.getText());

                double deliverCost = Double.parseDouble(txtDeleverCost.getText());
                double productCost = Double.parseDouble(txtProductionCost.getText());

                double netProfit = (cashAmount + chequeAmount + creditAmount) - (deliverCost + productCost + CpayAmount);
                txNetProfit.setText(String.valueOf(Math.round(netProfit * 100.0) / 100.0));
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void mineNetProfit() {
        try {
            double cashAmount = Double.parseDouble(txtCashAmount.getText());
            double chequeAmount = Double.parseDouble(txtCheckAmount.getText());
            double chequeAmount2 = Double.parseDouble(tblCheck.getValueAt(tblCheck.getSelectedRow(), 2).toString());
            double CpayAmount = Double.parseDouble(txtPayAmount.getText());

            double deliverCost = Double.parseDouble(txtDeleverCost.getText());
            double productCost = Double.parseDouble(txtProductionCost.getText());

            double netProfit = (cashAmount + chequeAmount) - (deliverCost + productCost + chequeAmount2);
            txNetProfit.setText(String.valueOf(Math.round(netProfit * 100.0) / 100.0));
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void mineNetProfit(int i) {
        try {
            double cashAmount = Double.parseDouble(txtCashAmount.getText());
            double chequeAmount = Double.parseDouble(txtCheckAmount.getText());
            double chequeAmount2 = Double.parseDouble(tblCheck.getValueAt(i, 2).toString());
            double CpayAmount = Double.parseDouble(txtPayAmount.getText());

            double deliverCost = Double.parseDouble(txtDeleverCost.getText());
            double productCost = Double.parseDouble(txtProductionCost.getText());

            double netProfit = (cashAmount + chequeAmount) - (deliverCost + productCost + chequeAmount2);
            txNetProfit.setText(String.valueOf(Math.round(netProfit * 100.0) / 100.0));
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void btnCheckAddMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCheckAddMouseReleased
        // TODO add your handling code here:
        if (!txtCheckNumber.getText().isEmpty()) {
            if (!txtBankName.getText().isEmpty()) {
                double checkAmount = Double.parseDouble(txtCheckAmount.getText());
                double Amount = Double.parseDouble(txtCAmount.getText());
                checkAmount += Amount;
                txtCheckAmount.setText(String.valueOf(checkAmount));

                double creditAmount = Double.parseDouble(txtTotalSale.getText()) - (Double.parseDouble(txtCashAmount.getText()) + Double.parseDouble(txtCheckAmount.getText()));// + Double.parseDouble(txtPayAmount.getText())
                if (creditAmount < 0) {
                    creditAmount = (creditAmount * -1);
                    txtPayAmount.setText(String.valueOf(Math.round(creditAmount * 100) / 100));
                    txtCreditAmount.setText("0");
                } else {
                    txtCreditAmount.setText(String.valueOf(Math.round(creditAmount * 100) / 100));
                    txtPayAmount.setText("0");
                }

                calNetProfit();

                new VehicleReturn().addCheck(txtCheckNumber, txtBankName, txtCAmount, dcReturnDate1, txtDescrip, tblCheck);
            }
        }
    }//GEN-LAST:event_btnCheckAddMouseReleased

    private void tblCheckKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblCheckKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_tblCheckKeyReleased

    private void tblCheckKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblCheckKeyTyped
        // TODO add your handling code here:
        if (evt.isControlDown() & evt.getKeyChar() == KeyEvent.VK_DELETE) {
            for (int i = 0; i < tblCheck.getRowCount(); i++) {
                mineNetProfit(i);
                double checkAmount = Double.parseDouble(txtCheckAmount.getText());
                double Amount = Double.parseDouble(tblCheck.getValueAt(i, 2).toString());
                checkAmount -= Amount;
                txtCheckAmount.setText(String.valueOf(checkAmount));

                double creditAmount = Double.parseDouble(txtTotalSale.getText()) - (Double.parseDouble(txtCashAmount.getText()) + Double.parseDouble(txtCheckAmount.getText()) + Double.parseDouble(txtPayAmount.getText()));
                txtCreditAmount.setText(String.valueOf(creditAmount));

            }
            new c.DeleveryItemTable().removeAllItem(tblCheck);
        } else if (evt.getKeyChar() == KeyEvent.VK_DELETE) {
            mineNetProfit();
            double checkAmount = Double.parseDouble(txtCheckAmount.getText());
            double Amount = Double.parseDouble(tblCheck.getValueAt(tblCheck.getSelectedRow(), 2).toString());
            checkAmount -= Amount;
            txtCheckAmount.setText(String.valueOf(checkAmount));

            double creditAmount = Double.parseDouble(txtTotalSale.getText()) - (Double.parseDouble(txtCashAmount.getText()) + Double.parseDouble(txtCheckAmount.getText()) + Double.parseDouble(txtPayAmount.getText()));
            txtCreditAmount.setText(String.valueOf(creditAmount));

            new c.DeleveryItemTable().removeItem(tblCheck);
        }
    }//GEN-LAST:event_tblCheckKeyTyped

    private void txtAmountFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtAmountFocusGained
        // TODO add your handling code here:
        if ("0".equals(txtAmount.getText())) {
            txtAmount.setText("");
        }
    }//GEN-LAST:event_txtAmountFocusGained

    private void txtAmountFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtAmountFocusLost
        // TODO add your handling code here:
        if ("".equals(txtAmount.getText())) {
            txtAmount.setText("0");
        }
    }//GEN-LAST:event_txtAmountFocusLost

    private void txtCAmountFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCAmountFocusGained
        // TODO add your handling code here:
        if ("0".equals(txtCAmount.getText())) {
            txtCAmount.setText("");
        }
    }//GEN-LAST:event_txtCAmountFocusGained

    private void txtCAmountFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCAmountFocusLost
        // TODO add your handling code here:
        if ("".equals(txtCAmount.getText())) {
            txtCAmount.setText("0");
        }
    }//GEN-LAST:event_txtCAmountFocusLost

    private void txtTotalSaleKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTotalSaleKeyReleased
        // TODO add your handling code here:
        if (txtTotalSale.getText().isEmpty()) {
            try {
                double totalSale = 0.0;
                double deliverCost = Double.parseDouble(txtDeleverCost.getText());
                double productCost = Double.parseDouble(txtProductionCost.getText());
                double grossProfit = totalSale - (deliverCost + productCost);
                txGrossProfit.setText(String.valueOf(Math.round(grossProfit * 100.0) / 100.0));
            } catch (Exception e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(null, e, "Error", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            try {
                double totalSale = Double.parseDouble(txtTotalSale.getText());
                double deliverCost = Double.parseDouble(txtDeleverCost.getText());
                double productCost = Double.parseDouble(txtProductionCost.getText());
                double grossProfit = totalSale - (deliverCost + productCost);
                txGrossProfit.setText(String.valueOf(Math.round(grossProfit * 100.0) / 100.0));
            } catch (Exception e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(null, e, "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_txtTotalSaleKeyReleased

    private void txtCashAmountKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCashAmountKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCashAmountKeyPressed

    private void txtCAmountKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCAmountKeyReleased
        // TODO add your handling code here:
        if (evt.getKeyChar() == KeyEvent.VK_ENTER) {
            if (!txtCheckNumber.getText().isEmpty()) {
                if (!txtBankName.getText().isEmpty()) {
                    double checkAmount = Double.parseDouble(txtCheckAmount.getText());
                    double Amount = Double.parseDouble(txtCAmount.getText());
                    checkAmount += Amount;
                    txtCheckAmount.setText(String.valueOf(checkAmount));

                    double creditAmount = Double.parseDouble(txtTotalSale.getText()) - (Double.parseDouble(txtCashAmount.getText()) + Double.parseDouble(txtCheckAmount.getText()));// + Double.parseDouble(txtPayAmount.getText())
                    if (creditAmount < 0) {
                        creditAmount = (creditAmount * -1);
                        txtPayAmount.setText(String.valueOf(Math.round(creditAmount * 100) / 100));
                        txtCreditAmount.setText("0");
                    } else {
                        txtCreditAmount.setText(String.valueOf(Math.round(creditAmount * 100) / 100));
                        txtPayAmount.setText("0");
                    }

                    calNetProfit();

                    new VehicleReturn().addCheck(txtCheckNumber, txtBankName, txtCAmount, dcReturnDate1, txtDescrip, tblCheck);
                }
            }
        }
    }//GEN-LAST:event_txtCAmountKeyReleased

    private void txtDescripFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDescripFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDescripFocusGained

    private void txtDescripFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDescripFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDescripFocusLost

    private void txtDescripKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDescripKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDescripKeyReleased

    private void btnReportMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnReportMouseReleased
        // TODO add your handling code here:
        getReturnReport(this);
    }//GEN-LAST:event_btnReportMouseReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmVehicleReturn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmVehicleReturn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmVehicleReturn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmVehicleReturn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmVehicleReturn(itemTable, txtRouteId, deliverInfo, deliverDate, tpDelivery).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnCheckAdd;
    private javax.swing.JButton btnReport;
    private javax.swing.JButton btnSave;
    private javax.swing.JComboBox<String> cmbCategory;
    private javax.swing.JComboBox<String> cmbType;
    private com.toedter.calendar.JDateChooser dcReturnDate;
    private com.toedter.calendar.JDateChooser dcReturnDate1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblCD;
    private javax.swing.JTable tblCheck;
    private javax.swing.JTextField txGrossProfit;
    private javax.swing.JTextField txNetProfit;
    private javax.swing.JTextField txtAmount;
    private javax.swing.JTextField txtBankName;
    private javax.swing.JTextField txtCAmount;
    private javax.swing.JTextField txtCashAmount;
    private javax.swing.JTextField txtCheckAmount;
    private javax.swing.JTextField txtCheckNumber;
    private javax.swing.JTextField txtCreditAmount;
    private javax.swing.JTextField txtDeleverCost;
    private javax.swing.JTextField txtDescrip;
    private javax.swing.JTextField txtPayAmount;
    private javax.swing.JTextField txtProductionCost;
    private javax.swing.JTextField txtRIQ;
    private javax.swing.JTextField txtRemark;
    private javax.swing.JTextField txtReturnItem;
    private javax.swing.JTextField txtTotalSale;
    // End of variables declaration//GEN-END:variables
}
